9.1)
declare
  v_empno emp1.empno%type:=&v_empno;
  v_ename emp1.ename%type;
  v_deptno emp1.deptno%type:='&v_deptno';
begin
  select ename into v_ename from emp1 where empno=v_empno;
  dbms_output.put_line(v_ename);

  select ename into v_ename from emp1 where deptno=v_deptno;
  dbms_output.put_line(v_ename);
  
  select to_number(v_ename)into v_ename from emp1 where rownum=1;
  dbms_output.put_line(v_ename);
  
  exception
    when value_error then
        dbms_output.put_line('char to num not possible');
    when too_many_rows then 
      dbms_output.put_line('there are multiple records to retrive');
    when no_data_found then
      dbms_output.put_line('no data found');
end;
/

9.1.2)
declare
  v_deptno emp1.deptno%type:='&v_deptno';
  v_ename emp1.ename%type;
begin
  select ename into v_ename from emp1 where deptno=v_deptno;
  dbms_output.put_line(v_ename);
exception
  when too_many_rows then 
      dbms_output.put_line('there are multiple records to retrive');
end;
/

output;
Enter value for v_deptno: D3
old   2:   v_deptno emp1.deptno%type:='&v_deptno';
new   2:   v_deptno emp1.deptno%type:='D3';
there are multiple records to retrive.

9.1.3)
declare
    v_ename emp1.ename%type:='&v_ename';
begin
  dbms_output.put_line(to_number(v_ename));
exception
   when value_error then
        dbms_output.put_line('char to num not possible');
end;
/

output:
Enter value for v_ename: arun
old   2:     v_ename emp1.ename%type:='&v_ename';
new   2:     v_ename emp1.ename%type:='arun';
char to num not possible
-------------------------------------------------------------------------------------------------
9.2) 
DECLARE
  pri_less EXCEPTION;
  ir_less EXCEPTION;
  dur_less EXCEPTION;

  pri NUMBER := &pri;
  ir NUMBER := &ir;
  dur NUMBER := &dur;
 
BEGIN
  IF pri <= 1000 THEN
    RAISE pri_less;
  END IF;

  IF ir < 5 THEN
    RAISE ir_less;
  END IF;

  IF dur < 1 THEN
    RAISE dur_less;
  END IF;
  
  DBMS_OUTPUT.PUT_LINE('interest to be paid is: '||(pri*ir*dur)/100);
EXCEPTION
  WHEN pri_less THEN
    DBMS_OUTPUT.PUT_LINE('Principal amount is less');
  WHEN ir_less THEN
    DBMS_OUTPUT.PUT_LINE('Interest rate is less');
  WHEN dur_less THEN
    DBMS_OUTPUT.PUT_LINE('Duration is less');
END;
/

output:
Enter value for pri: 20000
old   6:   pri NUMBER := &pri;
new   6:   pri NUMBER := 20000;
Enter value for ir: 23
old   7:   ir NUMBER := &ir;
new   7:   ir NUMBER := 23;
Enter value for dur: 3
old   8:   dur NUMBER := &dur;
new   8:   dur NUMBER := 3;
interest to be paid is: 13800

PL/SQL procedure successfully completed.
__________________________________________________________________________________________________________________
9.3) 
declare 
  sal_less exception;
  v_empno emp1.empno%type:=&v_empno;
  v_name emp1.ename%type;
  v_sal emp1.sal%type;
begin
  select empno, ename, sal into v_empno,v_name,v_sal from emp1 where empno=v_empno;
  if v_sal>25000 then
    raise sal_less;
    end if;
  DBMS_output.put_line('name: '|| v_name ||' id: '|| v_empno ||' salary: '||v_sal);
  exception
    when no_data_found then
      dbms_output.put_line('user not found in the employee list');
    when sal_less then
      update emp1 set sal=25000 where empno=v_empno;
      DBMS_output.put_line('Updated');
  end;
  /

output:
Enter value for v_empno: 123
old   3:   v_empno emp1.empno%type:=&v_empno;
new   3:   v_empno emp1.empno%type:=123;
Updated

PL/SQL procedure successfully completed.



